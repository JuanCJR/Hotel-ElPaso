<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/4QCuRXhpZgAATU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAAZKG
        AAcAAAB6AAAALAAAAABVTklDT0RFAABDAFIARQBBAFQATwBSADoAIABnAGQALQBqAHAAZQBnACAAdgAx
        AC4AMAAgACgAdQBzAGkAbgBnACAASQBKAEcAIABKAFAARQBHACAAdgA2ADIAKQAsACAAcQB1AGEAbABp
        AHQAeQAgAD0AIAA4ADIACv/bAEMABgQEBQQEBgUFBQYGBgcJDgkJCAgJEg0NCg4VEhYWFRIUFBcaIRwX
        GB8ZFBQdJx0fIiMlJSUWHCksKCQrISQlJP/bAEMBBgYGCQgJEQkJESQYFBgkJCQkJCQkJCQkJCQkJCQk
        JCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJP/AABEIAMgAyAMBIgACEQEDEQH/xAAfAAAB
        BQEBAQEBAQAAAAAAAAAAAQIDBAUGBwgJCgv/xAC1EAACAQMDAgQDBQUEBAAAAX0BAgMABBEFEiExQQYT
        UWEHInEUMoGRoQgjQrHBFVLR8CQzYnKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVGR0hJSlNUVVZXWFla
        Y2RlZmdoaWpzdHV2d3h5eoOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK
        0tPU1dbX2Nna4eLj5OXm5+jp6vHy8/T19vf4+fr/xAAfAQADAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJ
        Cgv/xAC1EQACAQIEBAMEBwUEBAABAncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEK
        FiQ04SXxFxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeI
        iYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T1
        9vf4+fr/2gAMAwEAAhEDEQA/APqmiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiig
        AooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiig
        AooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiig
        AooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiimS
        SpEUDsFLttXPc+n6UpSUVdsEr7D6KKY0yLKkTMA7glR646/zolJR1bBK4+iimechmMO4eYFDFfbOM/pQ
        5Jbsdh9FFMSZHd0VgWjIDD0yM0OSVk3uKw+imTzR20Mk8zhI41Lux6KAMk1V03WdP1jS49VsLuO5sZVL
        pOn3WAJBP6GmBdorP03xBpWr6Ous2N/BNpzKzC6DYjwpIY5PQAqfyrFsfin4J1LUE0+18SWElxI2yNd5
        CyN6KxG1j9CaAOqormdY+Jng/wAP6lNpmq+ILK0vIdvmQyMdy5UMM8dwQfxqKH4q+CbizuL2LxJYvb2x
        QTSBjhCxIXPHfB/KgDq6K5vR/iR4R1+4lt9L16zu5YomndIycrGvVunQZrZ0nVrHXNPh1HTbmO6tJwTH
        NH91wCRx+INAFuiiigAooooAKKKKACiiigAooooARgSpCkA9iRnFcbrmoajFexxXDRBoGEiGMcH0Jrsy
        QoJJAA6k1ltHo0k000s9rLJNwxeRTgeg9K8HP8sxGPoxp4efK766u1t9uutrHXg68KMnKauP0+TUrmx8
        6aS3V5F3RhUJA9M81zN/q2oRaqskxiE9vlAF+7z1rqbW50+zgWCO9gKJkLmUEgenWsrxFfeGPCulSahr
        1xFb2txKFa4kVmLO2SANoJHQ9K4czybGYnD0adGq4zjq25N3a1Xz5tnpZdNjWhiqVOcnKN09tP66Gqq6
        obIs0lsLo8hdp2j2zn9a5WLV9ROsGVfL+0PiHafu9enX1rV8J+OfDXi9Jrbw/rCX72iL5hVGBQHIBO4D
        PQ1p/wBg2AtxCIcbTuEg+/u9c1WbZNi8T7F4eq48mrvJ6tbfPfXbyDDYmnDm543v5C3X9pxWPmRyWzTq
        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
        T6b4c0i1nU5EsVogcfRsZFYP/Cjfh7/aP9o/8I//AKV53n+Z9suPv7t2ceZjr26V3dAHF/GaW/g+F/iG
        TTS4uBbcleojLKJDx/sb6+T/AIZX3hDTvE32jxrZzXmmrA+yONSw83I2lgCMjG7j1Ir7jdFkRkdVdGBD
        KwyCPQ15xdfs9fDu61A3h0aSMM25oIrmRYifoDwPYECgD5N8WajpureJNRvtHsRYadNOzW9sFC+WnYYH
        A9cDpnvX1D8WPHnhPw9p2i6D4s0OTWLLULfzXWIjfBtChWUEg5OW5DAjB9a3tQ+Bvw71O5+0XPhqHzNi
        R/uriaJdqqFHyo4HQDnHPetTxJ8NPCXi6K3TWtGiuzbRiGKXzHWREHRd6kMRyeCT1oA+OvHA8GnUIpPB
        jasLV1Jlj1BV/dtngIQckY9efc17Rb+Etd8T/sy29q8M015bOb2zhIO94VdsADqfkLlR3G3HUV6JpXwG
        +Hmk3S3UXh9J5EOV+0zSSqP+As20/iDXfgBVCgAADAA7UAfG/wAD/iNY/DnxNdXGrRzNY3lv5MjQruaN
        gwKtjPI6g/Wsz4n+Kx8SfiBc6jpdtO0U5jtrSIrmRwAFHA7scnHuBX1D4m+CPgXxVeyX15o4hu5Duklt
        JGi3nuSB8pJ7nGTVzwj8JvB/gm4F1pGkIt4BgXM7GWQf7pY/L/wHFAF74e+HpPCngrRtFmx59rbKsuOg
        kPzOB7bia6GiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAo
        oooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAo
        oooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAo
        oooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAo
        oooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooA/9k=
</value>
  </data>
</root>